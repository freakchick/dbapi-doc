(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{287:function(t,a,s){"use strict";s.r(a);var e=s(14),v=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用指南"}},[t._v("#")]),t._v(" 使用指南")]),t._v(" "),a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("狭义上说，DBAPI是一个面向数仓开发人员的低代码工具，只需在页面上编写sql，并配置好参数，就可以自动生成http接口。它可以帮助程序员快速的开发后端数据接口，尤其适用于BI报表、数据可视化大屏的后端接口开发。")])]),t._v(" "),a("li",[a("p",[t._v("广义上说，DBAPI是整个企业数据接口的管理中心，是企业对外提供数据服务的管理平台。它提供了数据接口的动态创建发布功能，对接口的统一管理，并提供了对客户端的管理能力，可以监控客户端对接口的调用、控制客户端对接口的权限。")])]),t._v(" "),a("li",[a("p",[t._v("体验地址： http://www.51dbapi.com:8520/ 。 默认账户： admin/admin (请不要修改密码)")])])]),t._v(" "),a("h2",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[t._v("开箱即用，不需要编程，单机模式不需要依赖其他软件（只需要java运行环境）")]),t._v(" "),a("li",[t._v("支持单机模式、集群模式；支持云原生容器化部署")]),t._v(" "),a("li",[t._v("支持动态创建、修改API；动态创建、修改数据源。热部署全程无感。")]),t._v(" "),a("li",[t._v("支持API级别的访问权限控制，支持IP白名单、黑名单控制")]),t._v(" "),a("li",[t._v("支持所有类型数据库（JDBC协议），包括mysql/sqlserver/postgreSql/hive/oracle等等")]),t._v(" "),a("li",[t._v("支持动态sql，类似mybatis的动态sql，支持sql编辑、运行、调试")]),t._v(" "),a("li",[t._v("丰富的插件扩展，支持缓存、数据转换、失败告警")]),t._v(" "),a("li",[t._v("支持API配置导入导出，方便测试环境到生产环境的API迁移")]),t._v(" "),a("li",[t._v("支持一个接口内多条SQL执行（例如分页功能），支持事务开启关闭")]),t._v(" "),a("li",[t._v("支持"),a("code",[t._v("application/json")]),t._v("和"),a("code",[t._v("application/x-www-form-urlencoded")])]),t._v(" "),a("li",[t._v("支持接口调用记录查询，接口访问信息统计")])]),t._v(" "),a("h2",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),a("h3",{attrs:{id:"创建-修改数据源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-修改数据源"}},[t._v("#")]),t._v(" 创建/修改数据源")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20220313/datasource_add.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"创建-修改api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-修改api"}},[t._v("#")]),t._v(" 创建/修改API")]),t._v(" "),a("h4",{attrs:{id:"基础配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础配置"}},[t._v("#")]),t._v(" 基础配置")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20220503/api_edit.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("API分组，选择API所属的分组，这个分组可以将来授权使用")]),t._v(" "),a("li",[t._v("请求路径，这就是将来http请求的路径")]),t._v(" "),a("li",[t._v("选择数据源，就是接口执行sql逻辑的数据库地址")]),t._v(" "),a("li",[t._v("填入sql ,类似mybatis的动态sql语法，"),a("strong",[t._v("不需要写最外层的"),a("code",[t._v("<select>")]),t._v(" "),a("code",[t._v("<update>")]),t._v(" 标签")]),t._v("，参数名用 "),a("code",[t._v("#{}")]),t._v(" "),a("code",[t._v("${}")]),t._v("\n表示，可以参考"),a("a",{attrs:{href:"https://mybatis.org/mybatis-3/zh/dynamic-sql.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mybatis文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("一个sql编写窗口内只能写一条sql")]),t._v(" "),a("li",[t._v("点击添加可以新增sql，一个API内可以执行多条sql，最后的多个结果封装后一起返回，比如分页查询，一个接口内既要查询详情也要查询总条数")]),t._v(" "),a("li",[t._v("选择Content-Type，如果是"),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("类型的API, 需要配置参数，如果是"),a("code",[t._v("application/json")]),t._v("类型的API，需要填写json参数实例")])]),t._v(" "),a("blockquote",[a("p",[t._v("对于"),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("类型的API，用户在请求该API的时候既可以使用"),a("code",[t._v("application/x-www-form-urlencoded")]),t._v("，也可以使用"),a("code",[t._v("application/json")])])]),t._v(" "),a("blockquote",[a("p",[t._v("对于"),a("code",[t._v("application/json")]),t._v("类型的API，用户在请求该API的时候只能使用"),a("code",[t._v("application/json")]),t._v("方式")])]),t._v(" "),a("ul",[a("li",[t._v("添加参数，参数名称就是sql中的参数名，sql中涉及到的每个参数都要填写")]),t._v(" "),a("li",[t._v("访问权限，开放接口可以直接访问，私有接口需要用户申请token才能访问")])]),t._v(" "),a("h4",{attrs:{id:"高级配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级配置"}},[t._v("#")]),t._v(" 高级配置")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20220503/api_edit2.png",alt:""}})]),t._v(" "),a("ul",[a("li",[t._v("事务")])]),t._v(" "),a("blockquote",[a("p",[t._v("默认关闭事务，如果是insert/update/delete语句，建议开启事务，开启事务后如果sql执行失败事务会回滚。如果API内有多条sql，开启事务后多条sql是放在一个事务内执行的")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("如果是HIVE等不支持事务的数据库，请不要开启事务，否则会报错")])])]),t._v(" "),a("ul",[a("li",[t._v("数据转换，如果需要数据转换，就填写数据转换插件的java类名，不填写表示不转换。插件如果需要传参数就填写参数。")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("如果一个API内包含多条sql，那么每条sql会对应一个数据转换插件配置，数据转换插件永远是针对单条sql查询结果进行转换")])])]),t._v(" "),a("ul",[a("li",[t._v("缓存，如果需要数据缓存，就填写缓存插件的java类名，不填写表示不开启缓存。插件如果需要传参数就填写参数。")]),t._v(" "),a("li",[t._v("告警，如果API执行失败需要告警的话，就填写告警插件的java类名，不填写表示不开启失败告警。插件如果需要传参数就填写参数。")])]),t._v(" "),a("h3",{attrs:{id:"api分组管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api分组管理"}},[t._v("#")]),t._v(" API分组管理")]),t._v(" "),a("ul",[a("li",[t._v("可以添加、删除分组\n"),a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20210502/group.png",alt:""}})])]),t._v(" "),a("h3",{attrs:{id:"api请求测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api请求测试"}},[t._v("#")]),t._v(" API请求测试")]),t._v(" "),a("ul",[a("li",[t._v("在页面快速访问API，查看结果\n"),a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20221001/request.png",alt:""}})])]),t._v(" "),a("blockquote",[a("p",[t._v("如果是私有接口，用户必须先使用自己的appid和secret来申请token，然后再使用token去访问接口。\n如果是开放接口则可以直接访问")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意如果是内网部署，您需要手动修改访问的IP、端口为外网IP、端口")])]),t._v(" "),a("h3",{attrs:{id:"sql调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql调试"}},[t._v("#")]),t._v(" sql调试")]),t._v(" "),a("ul",[a("li",[t._v("点击sql填写框右上角的最大化按钮，可以开启sql调试功能\n"),a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20210803/sql_run.png",alt:""}})])]),t._v(" "),a("blockquote",[a("p",[t._v("如果sql中有参数，在调试的时候，请输入参数")])]),t._v(" "),a("h2",{attrs:{id:"权限管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限管理"}},[t._v("#")]),t._v(" 权限管理")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20221001/apps.png",alt:""}})]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("什么是应用？")])]),t._v(" "),a("p",[t._v("应用由系统管理员创建，创建好后会自动生成appid和secret，系统管理员需要将appid和secret告知客户端（API调用方）。\n客户端使用自己的appid和secret访问 "),a("code",[t._v("http://192.168.xx.xx:8520/token/generate?appid=xxx&secret=xxx")]),t._v("\n接口可以动态的获取token，客户端使用这个token才能访问私有API（前提是系统管理员已经对该应用授权了访问此私有API）")])]),t._v(" "),a("h3",{attrs:{id:"创建应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建应用"}},[t._v("#")]),t._v(" 创建应用")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20221001/app_add.png",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("创建应用必须设置token过期时间，以后客户端每次申请的token就会有相应的过期时间，在这个有效期内，\n使用上一次申请的token去访问API都是有效的。否则过了这个过期时间，就要重新申请token。")])]),t._v(" "),a("blockquote",[a("p",[t._v("如果token过期时间设置单次有效，那么每次访问私有API都需要重新申请一次token")])]),t._v(" "),a("h3",{attrs:{id:"授权应用可以访问哪些api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#授权应用可以访问哪些api"}},[t._v("#")]),t._v(" 授权应用可以访问哪些API")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20221001/auth.png",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("私有API权限控制粒度仅到API分组级别，可以对应用授权可以访问那些分组下的API。\n那么该应用对应的apid和secret申请到的token就可以访问到该应用授权的分组下的API")])]),t._v(" "),a("h3",{attrs:{id:"token使用说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#token使用说明"}},[t._v("#")]),t._v(" Token使用说明")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("token申请接口：\n"),a("code",[t._v("http://192.168.xx.xx:8520/token/generate?appid=xxx&secret=xxx")])])]),t._v(" "),a("li",[a("p",[t._v("请求私有接口时，需要把token值放入header的"),a("code",[t._v("Authorization")]),t._v("字段中携带，才可以访问成功。（如果是开放接口，不需要设置header）")])]),t._v(" "),a("li",[a("p",[t._v("以python为例，访问API的代码示例如下：")])])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\nheaders "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Authorization"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5ad0dcb4eb03d3b0b7e4b82ae0ba433f"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nre "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://127.0.0.1:8520/API/userById"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"idList"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" headers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("headers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"ip防火墙设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip防火墙设置"}},[t._v("#")]),t._v(" ip防火墙设置")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20210803/ip.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"其他功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他功能"}},[t._v("#")]),t._v(" 其他功能")]),t._v(" "),a("h3",{attrs:{id:"导出接口文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出接口文档"}},[t._v("#")]),t._v(" 导出接口文档")]),t._v(" "),a("ul",[a("li",[t._v("可以导出接口文档（markdown格式）\n"),a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20210502/docs.png",alt:""}})])]),t._v(" "),a("h2",{attrs:{id:"数据源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据源"}},[t._v("#")]),t._v(" 数据源")]),t._v(" "),a("ul",[a("li",[t._v("理论上支持所有支持JDBC协议的数据库")]),t._v(" "),a("li",[t._v("创建数据源的时候如果选择其他类型，需要用户手动填写JDBC驱动class类和查询所有表的sql，"),a("strong",[t._v("同时将相应的JDBC驱动jar包放入DBApi的"),a("code",[t._v("lib")]),t._v("目录下并重启生效（如果是集群模式，每个节点都需要拷贝jar包并重启集群）")])]),t._v(" "),a("li",[t._v("DBApi已经自带mysql/sqlserver/postgreSql/hive/kylin/clickhouse/的驱动包，"),a("strong",[t._v("如果版本不匹配请手动替换"),a("code",[t._v("lib")]),t._v("目录下的相应驱动jar包")])]),t._v(" "),a("li",[a("code",[t._v("查询所有表sql")]),t._v("的作用：创建、编辑API的时候，点击选择数据源，会自动展示该数据源下的所有表名称，方便辅助用户编写业务逻辑sql。\n由于不同数据库查询所有表名称的方式都不一样，所以需要用户手动去填写这个sql\n"),a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20220503/tables.png",alt:""}})])]),t._v(" "),a("h2",{attrs:{id:"插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[t._v("#")]),t._v(" 插件")]),t._v(" "),a("ul",[a("li",[t._v("DBApi的插件分3类，分别是数据转换插件、缓存插件、告警插件")]),t._v(" "),a("li",[t._v("插件需要用户自己编写java代码开发。开发完成后打成jar包，并放入DBApi的"),a("code",[t._v("lib")]),t._v("目录下即可以使用")]),t._v(" "),a("li",[t._v("详细请阅读"),a("RouterLink",{attrs:{to:"/zh/plugin/"}},[t._v("插件指南")])],1)]),t._v(" "),a("h3",{attrs:{id:"数据转换插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据转换插件"}},[t._v("#")]),t._v(" 数据转换插件")]),t._v(" "),a("ul",[a("li",[t._v("有时候sql无法一次性获得自己想要的数据格式，如果用代码对数据进行一些处理转换能更加方便，这时候就要用到数据转换插件。用户自己编写数据转换逻辑的代码。")]),t._v(" "),a("li",[t._v("典型场景，比如针对sql查询结果中的用户手机号、银行卡号进行加密脱敏。")])]),t._v(" "),a("h3",{attrs:{id:"缓存插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存插件"}},[t._v("#")]),t._v(" 缓存插件")]),t._v(" "),a("ul",[a("li",[t._v("主要是对查询类API，sql查询结果进行缓存，这样避免频繁的查询数据库，对数据库造成压力。")]),t._v(" "),a("li",[t._v("缓存逻辑由用户自己编写，用户可以缓存到redis/mongodb/elasticsearch等等。")]),t._v(" "),a("li",[t._v("如果开启了缓存，当从缓存中查询不到数据时，才去数据库查询，同时将结果缓存下来。")])]),t._v(" "),a("h3",{attrs:{id:"告警插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#告警插件"}},[t._v("#")]),t._v(" 告警插件")]),t._v(" "),a("ul",[a("li",[t._v("当API内部报错的时候，告警插件可以将报错信息发送告警提醒，比如发邮件、发短信")]),t._v(" "),a("li",[t._v("告警逻辑由用户自己编写")])]),t._v(" "),a("h2",{attrs:{id:"监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#监控"}},[t._v("#")]),t._v(" 监控")]),t._v(" "),a("blockquote",[a("p",[t._v("DBAPI只依赖元数据库（mysql/sqlite）就可以使用，但是如果您还需要使用页面上的监控功能（监控API调用记录、访问量、成功率等等），\n就必须依赖于另一个日志数据库（需用户自行搭建），来存储API访问日志，推荐使用clickhouse，当然您也可以使用其它的关系型数据库。")]),t._v(" "),a("p",[t._v("目前提供了clickhouse/mysql的日志数据库初始化脚本，在"),a("code",[t._v("sql")]),t._v("目录下")])]),t._v(" "),a("ul",[a("li",[t._v("API访问日志采集进入日志数据库有3种方式")])]),t._v(" "),a("ol",[a("li",[t._v("DBAPI默认会将API访问日志写入磁盘文件"),a("code",[t._v("logs/dbapi-access.log")]),t._v("，用户可以自行使用"),a("code",[t._v("datax")]),t._v(" "),a("code",[t._v("flume")]),t._v("等工具采集日志到日志数据库。")]),t._v(" "),a("li",[t._v("如果在"),a("code",[t._v("conf/application.properties")]),t._v("文件配置了"),a("code",[t._v("access.log.writer=db")]),t._v("，那么DBAPI会将API访问日志直接写入日志数据库，这种方式适用于日志量不太大的场景下。")]),t._v(" "),a("li",[t._v("如果在"),a("code",[t._v("conf/application.properties")]),t._v("文件配置了"),a("code",[t._v("access.log.writer=kafka")]),t._v("，那么DBAPI会将API访问日志写入kafka，\n用户需要自行从kafka采集日志到日志数据库，这种方式适用于日志量大的场景，可以由kafka去做数据缓冲。")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意此种方式下需要在"),a("code",[t._v("conf/application.properties")]),t._v("文件填写kafka地址。")]),t._v(" "),a("p",[t._v("同时DBAPI也自带了消费kafka日志并写入日志数据库的工具，请使用XXX脚本。")])]),t._v(" "),a("ul",[a("li",[t._v("如果您不需要使用监控功能，可以不用搭建日志数据库，并配置"),a("code",[t._v("access.log.writer=null")]),t._v("即可。")])]),t._v(" "),a("h2",{attrs:{id:"注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),a("h3",{attrs:{id:"数据源支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据源支持"}},[t._v("#")]),t._v(" 数据源支持")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("如果您要使用Oracle或者其他类型的数据源，请将相应的jdbc驱动包手动放入DBApi部署后的"),a("code",[t._v("lib")]),t._v("目录下（如果是集群部署每个节点都需要手动放入jar包）")])])]),t._v(" "),a("h3",{attrs:{id:"sql编写规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql编写规范"}},[t._v("#")]),t._v(" sql编写规范")]),t._v(" "),a("ul",[a("li",[t._v("和mybatis动态sql语法一样，同样支持参数"),a("code",[t._v("#{}")]),t._v("、 "),a("code",[t._v("${}")]),t._v("，可以参考"),a("a",{attrs:{href:"https://mybatis.org/mybatis-3/zh/dynamic-sql.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mybatis文档"),a("OutboundLink")],1),t._v("\n，不需要写最外层的"),a("code",[t._v("<select>")]),t._v(" "),a("code",[t._v("<update>")]),t._v(" 标签，直接写sql内容")]),t._v(" "),a("li",[t._v("注意和mybatis一样，sql里的小于号不要写成"),a("code",[t._v("<")]),t._v("，要写成 "),a("code",[t._v("&lt;")])])]),t._v(" "),a("h2",{attrs:{id:"权限校验流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限校验流程"}},[t._v("#")]),t._v(" 权限校验流程")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://freakchicken.gitee.io/images/dbApi/20210502/lc.png",alt:""}})])])}),[],!1,null,null,null);a.default=v.exports}}]);